apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prom-workshop
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      scrape_timeout: 5s
      evaluation_interval: 5s

    rule_files:
    - "/etc/prometheus-rules/*.yaml"

    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_namespace]
          regex: prom-workshop
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex:
          action: drop

    scrape_configs:
    
    - job_name: 'kubernetes-pods'

      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: ${1}:${2}
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: kubernetes_pod_node_name
      # Is this needed, alongside the labelmap above?
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_team]
        action: replace
        target_label: team

      sample_limit: 50000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: prom-workshop
data:
  http-simulator.yaml: |-
    groups:
    - name: http_simulator_health
      rules:
      - alert: HttpSimulatorNotRunning
        expr: absent(up{app="http-simulator"}) == 1
        for: 1m
        labels:
          severity: major
      - alert: HttpSimulatorDown
        expr: sum(up{app="http-simulator"}) == 0
        for: 1m
        labels:
          severity: major

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: prom-workshop

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: prom-workshop

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: prometheus
  namespace: prom-workshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 0
  template:
    metadata:
      name: prometheus
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.9.1
        args:
          - '--storage.tsdb.retention=7d'
          - '--web.enable-lifecycle'
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-rules
          mountPath: /etc/prometheus-rules
        resources:
          limits:
            memory: "1Gi"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-rules
        configMap:
          name: prometheus-rules

---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: prometheus
  name: prometheus
  namespace: prom-workshop
spec:
  type: LoadBalancer
  selector:
    app: prometheus
  ports:
  - name: prometheus
    protocol: TCP
    port: 9090
    targetPort: web
